openapi: 3.0.3
info:
  title: Proyecto Podcast Filosofía
  description: Esta es la documentación de la API del proyecto de Podcast utilizando OpenAPI 3.0 specification.
  version: 2.0.0
servers:
- url: https://localhost/
tags:
- name: podcasts
  description: Maneja toda la información y servicios relacionados con los podcasts dentro de la aplicación.
  externalDocs:
    description: Find out more
    url: http://swagger.io
- name: usuarios
  description: Maneja cualquier información relacionada con los usuarios de la aplicación.
- name: videos
  description: Maneja toda la información y servicios relacionados con los vídeos dentro de la aplicación.
- name: valoraciones
  description: Maneja toda la información y servicios relacionados con las valoraciones de los podcasts dentro de la aplicación.
- name: comentarios
  description: Maneja toda la información y servicios relacionados con los comentarios de los podcasts dentro de la aplicación.
paths:
  /podcasts:
    put:
      tags:
      - podcasts
      summary: Actualizar un podcast ya existente
      description: Actualizar un podcast ya existente por Id
      operationId: actualizarPodcast
      requestBody:
        description: Actualiza un podcast ya existente
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Podcast'
        required: true
      responses:
        "200":
          description: Operación realizada con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Podcast'
        "400":
          description: ID incorrecto
        "404":
          description: Podcast not found
    post:
      tags:
      - podcasts
      summary: Añade un nuevo podcast a la aplicación.
      description: Añade un nuevo podcast a la aplicación.
      operationId: subirPodcast
      requestBody:
        description: Añade un nuevo podcast a la aplicación.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Podcast'
        required: true
      responses:
        "200":
          description: Operación realizada con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Podcast'
            application/xml:
              schema:
                $ref: '#/components/schemas/Podcast'
  /podcasts/tags/{tag}:
    get:
      tags:
      - podcasts
      summary: Encuentra un podcast utilizando etiquetas
      description: "Multiple tags can be provided with comma separated strings. Use\
        \ tag1, tag2, tag3 for testing."
      operationId: getPodcastTags
      parameters:
      - name: tag
        in: path
        description: Etiquetas para filtrar resultados
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Operación realizada con éxito
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Podcast'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Podcast'
        "400":
          description: La etiqueta es inválida
  /podcasts/{id}:
    get:
      tags:
      - podcasts
      summary: Encuentra un podcast utilizando de parámetro el Id.
      description: Devuelve un podcast ya existente.
      operationId: getPodcast
      parameters:
      - name: id
        in: path
        description: Id del podcast a devolver
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Operación realizada con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Podcast'
            application/xml:
              schema:
                $ref: '#/components/schemas/Podcast'
        "400":
          description: El Id proporcionado no es válido
        "404":
          description: podcast not found
    delete:
      tags:
      - podcasts
      summary: Elimina un podcast
      description: Elimina un podcast
      operationId: deletePodcast
      parameters:
      - name: api_key
        in: header
        description: ""
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: path
        description: podcast que se eliminará
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "400":
          description: El podcast no es válido
  /usuarios:
    put:
        tags:
        - usuarios
        summary: Actualizar el usuario
        description: Esto solo puede hacerlo el usuario en sesión
        operationId: updateUser
        requestBody:
          description: Actualiza un usuario existente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
            application/xml:
              schema:
                $ref: '#/components/schemas/Usuario'
            application/x-www-form-urlencoded:
              schema:
                $ref: '#/components/schemas/Usuario'
        responses:
          default:
            description: successful operation
    post:
      tags:
      - usuarios
      summary: Crear usuario
      description: Esto solo puede hacerlo el usuario creado.
      operationId: crearUsuario
      requestBody:
        description: Crea un usuario
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Usuario'
          application/xml:
            schema:
              $ref: '#/components/schemas/Usuario'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Usuario'
      responses:
        default:
          description: Operación realizada con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
            application/xml:
              schema:
                $ref: '#/components/schemas/Usuario'
  /usuarios/login:
    post:
      tags:
      - usuarios
      summary: El usuario se identifica en el sistema(login)
      description: ""
      required: true
      operationId: loginUsuario
      requestBody:
        description: el nombre de usuario y la contraseña para identificarse
        content:
         application/json:
            schema:
              $ref: '#/components/schemas/loginUsuario'
          application/xml:
            schema:
              $ref: '#/components/schemas/loginUsuario'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/loginUsuario'
     responses:
      default:
        description: Operación realizada con éxito
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Usuario'
          application/xml:
            schema:
              $ref: '#/components/schemas/Usuario'
  /usuarios/logout:
    get:
      tags:
      - usuarios
      summary: Se cierra la sesión del usuario(logout)
      description: ""
      operationId: logoutUsuario
      parameters: []
      responses:
        default:
          description: Operación realizada con éxito
  /usuarios/{nombreUsuario}:
    get:
      tags:
      - usuarios
      summary: Encuentra a un usuario mediante su nombre
      description: ""
      operationId: getUserByName
      parameters:
      - name: nombreUsuario
        in: path
        description: 'The name that needs to be fetched. Use user1 for testing. '
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
            application/xml:
              schema:
                $ref: '#/components/schemas/Usuario'
        "400":
          description: Invalid username supplied
        "404":
          description: User not found
  /usuarios/{id}:        
    delete:
      tags:
      - usuarios
      summary: Elimina el usuario
      description: Esto solo puede hacerlo el usuario en sesión
      operationId: deleteUsuario
      parameters:
      - name: id
        in: path
        description: el id del usuario que va a eliminarse
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/Podcast'
      responses:
        "400":
          description: el id no es válido
        "404":
          description: User not found
  /videos:
    put:
      tags:
      - videos
      summary: Actualizar un video ya existente
      description: Actualizar un video ya existente por Id
      operationId: actualizarvideo
      requestBody:
        description: Actualiza un video ya existente
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Video'
        required: true
      responses:
        "200":
          description: Operación realizada con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
        "400":
          description: ID incorrecto
        "404":
          description: video not found
    post:
      tags:
      - videos
      summary: Añade un nuevo video a la aplicación.
      description: Añade un nuevo video a la aplicación.
      operationId: subirvideo
      requestBody:
        description: Añade un nuevo video a la aplicación.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Video'
        required: true
      responses:
        "200":
          description: Operación realizada con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
            application/xml:
              schema:
                $ref: '#/components/schemas/Video'
  /videos/{tag}:
    get:
      tags:
      - videos
      summary: Encuentra un video utilizando etiquetas
      description: "Multiple tags can be provided with comma separated strings. Use\
        \ tag1, tag2, tag3 for testing."
      operationId: getvideoTags
      parameters:
      - name: tag
        in: path
        description: Etiquetas para filtrar resultados
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Operación realizada con éxito
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Video'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Video'
        "400":
          description: La etiqueta es inválida
  /videos/{id}:
    get:
      tags:
      - videos
      summary: Encuentra un video utilizando de parámetro el Id.
      description: Devuelve un video ya existente.
      operationId: getvideo
      parameters:
      - name: id
        in: path
        description: Id del video a devolver
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Operación realizada con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
            application/xml:
              schema:
                $ref: '#/components/schemas/Video'
        "400":
          description: El Id proporcionado no es válido
        "404":
          description: video not found
    delete:
      tags:
      - videos
      summary: Elimina un video
      description: Elimina un video
      operationId: deletevideo
      parameters:
      - name: api_key
        in: header
        description: ""
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: path
        description: video que se eliminará
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "400":
          description: El video no es válido
  /valoraciones:
   put:
    tags:
    - valoraciones
    summary: Modifica la valoración
    description: Modifica la valoración del usuario en sesión
    operationId: putValoracion
    requestBody:
        description: Modifica la valoración del usuario en sesión
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Valoracion'
    responses:
      "400":
        description: la valoración no es válida
      "404":
        description: Valoracion not found
   post:
      tags:
      - valoraciones
      summary: Crea la valoración
      description: Crea la valoración del usuario en sesión
      operationId: postValoracion
      requestBody:
        description: Crea la valoración del usuario en sesión
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Valoracion'
      responses:
        "400":
          description: la valoración no es válida
        "404":
          description: User not found
  /valoraciones/{podcast}:
    get:
      tags:
      - valoraciones
      summary: Muestra la valoración
      description: Muestra la valoración en el podcast
      operationId: getValoracion
      parameters:
      - name: podcast
        in: path
        description: Objeto de podcast
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/Valoracion'
      responses:
        "400":
          description: la valoración no es válida
        "404":
          description: User not found
    delete:
      tags:
      - valoraciones
      summary: Borra la valoración
      description: Elimina la valoración del podcast
      operationId: deleteValoracion
      parameters:
      - name: podcast
        in: path
        description: Objeto de podcast
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/Valoracion'
      responses:
        "400":
          description: La valoración no es válida
        "404":
          description: Valoracion not found
  /comentarios:
    put:
      tags:
      - comentarios
      summary: Modifica el comentario
      description: Modifica el comentario del usuario en sesión
      operationId: putComentario
      requestBody:
        description: Modifica el comentario del usuario en sesión
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comentario'
      responses:
        "400":
          description: la valoración no es válida
        "404":
          description: Valoracion not found
    post:
      tags:
      - comentarios
      summary: Crea el comentario
      description: Crea el comentario del usuario en sesión
      operationId: postComentario
      requestBody:
        description: Modifica el comentario del usuario en sesión
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comentario'
      responses:
        "400":
          description: la valoración no es válida
        "404":
          description: User not found
  /comentarios/{podcast}:
    get:
      tags:
      - comentarios
      summary: Muestra el comentario
      description: Muestra el comentario en el podcast
      operationId: getComentario
      parameters:
      - name: podcast
        in: path
        description: Objeto de podcast
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/Comentario'
      responses:
        "400":
          description: la valoración no es válida
        "404":
          description: User not found
    delete:
      tags:
      - comentarios
      summary: Borra el comentario
      description: Elimina el comentario del usuario en sesión
      operationId: deleteComentario
      parameters:
      - name: podcast
        in: path
        description: Objeto de podcast
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/Comentario'
      responses:
        "400":
          description: El comentario no es válido
        "404":
          description: comentario not found
components:
  schemas:
    Categoria:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: filósofos
      xml:
        name: categoria
    Usuario:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 01
        correo:
          type: string
          example: juan@gmail.es
        contrasena:
          type: string
          example: "hola"
        tipo:
          type: integer
          format: int64
          example: "02"
        descripcion:
          type: string
          example: "Puede subir y escuchar podcasts"
      xml:
        name: usuario
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
        nombre:
          type: string
      xml:
        name: tag
    Podcast:
      required:
      - id
      - titulo
      - categoria
      - duracion
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        titulo:
          type: string
          example: La caverna de Platón
        categoria:
          $ref: '#/components/schemas/Categoria'
        duracion:
          type: string
          example: Racionalismo
        tags:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/Tag'
      xml:
        name: podcast
    Video:
      required:
      - id
      - titulo
      - categoria
      - duracion
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        titulo:
          type: string
          example: La caverna de Platón
        categoria:
          $ref: '#/components/schemas/Categoria'
        duracion:
          type: string
          example: Racionalismo
        tags:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/Tag'
      xml:
        name: video
    Valoracion:
      type: object
      properties:
        nota:
          type: integer
          format: int64
          example: 5
        imagen:
          type: string
          example: ../imagenes/estrellas4.png
    Comentario:
      type: object
      properties:
        texto:
          type: string
          example: 5
        autor:
          $ref: '#/components/schemas/Usuario'
      xml:
        name: comentario
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
      xml:
        name: '##default'
  requestBodies:
    Podcast:
      description: Podcast object that needs to be added
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Podcast'
    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Usuario'
